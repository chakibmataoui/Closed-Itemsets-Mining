#include "context.h"

context::context(char* context_file){
  string file_name(context_file);
  dsv_filter filter;

  if (!filter.load(file_name))
    cerr << "return 1";

  size_i = filter.row_count()-1;
  size_j = filter.column_count()-1;
  for (std::size_t row = 1; row < filter.row_count(); ++row)
    {
      string res;
      vector<bool> t(size_j,true);
      filter.row(row,t,res);
      context_matrix.push_back(vector<bool>());
      for (std::size_t col = 1; col < filter.column_count(); ++col)
      {
	context_matrix[row-1].push_back(stoi(res.substr((col-1)*2,1)));
      }
    }
  cout << "size i : " << size_i << " size_j : " << size_j << endl;
  for(int i = 0; i < size_i;++i){
    cout << i << " " ;
    for(int j = 0; j < size_j;++j)
      cout << context_matrix[i][j] << " " ;
    cout << endl;
  }
}

